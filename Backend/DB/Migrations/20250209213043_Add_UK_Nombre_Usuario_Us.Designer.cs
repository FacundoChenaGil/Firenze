// <auto-generated />
using System;
using DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DB.Migrations
{
    [DbContext(typeof(FirenzeContext))]
    [Migration("20250209213043_Add_UK_Nombre_Usuario_Us")]
    partial class Add_UK_Nombre_Usuario_Us
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DB.Estado_Turno", b =>
                {
                    b.Property<int>("Id_Estado_Turno_Et")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Estado_Turno_Et"));

                    b.Property<string>("Descripcion_Et")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id_Estado_Turno_Et");

                    b.ToTable("EstadosTurno");
                });

            modelBuilder.Entity("DB.Tarjeta_Trabajo", b =>
                {
                    b.Property<int>("Id_Tarjeta_Trabajo_Tar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Tarjeta_Trabajo_Tar"));

                    b.Property<string>("Descripcion_Tar")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("Id_Trabajo_Tar")
                        .HasColumnType("int");

                    b.Property<string>("Imagen_URL_Tar")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre_Tar")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id_Tarjeta_Trabajo_Tar");

                    b.HasIndex("Id_Trabajo_Tar");

                    b.ToTable("TarjetasTrabajo");
                });

            modelBuilder.Entity("DB.Tipo_Trabajo", b =>
                {
                    b.Property<int>("Id_Tipo_Trabajo_Ttr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Tipo_Trabajo_Ttr"));

                    b.Property<string>("Descripcion_Ttr")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id_Tipo_Trabajo_Ttr");

                    b.ToTable("TipoTrabajos");
                });

            modelBuilder.Entity("DB.Tipo_Usuario", b =>
                {
                    b.Property<int>("Id_Tipo_Usuario_Tus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Tipo_Usuario_Tus"));

                    b.Property<string>("Descripcion_Tus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id_Tipo_Usuario_Tus");

                    b.ToTable("TiposUsuario");

                    b.HasData(
                        new
                        {
                            Id_Tipo_Usuario_Tus = 1,
                            Descripcion_Tus = "Admin"
                        },
                        new
                        {
                            Id_Tipo_Usuario_Tus = 2,
                            Descripcion_Tus = "Cliente"
                        });
                });

            modelBuilder.Entity("DB.Trabajo", b =>
                {
                    b.Property<int>("Id_Trabajo_Tr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Trabajo_Tr"));

                    b.Property<bool>("Adicional_Tr")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion_Tr")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<TimeSpan?>("Duracion_Tr")
                        .HasColumnType("time");

                    b.Property<int>("Id_Tipo_Trabajo_Tr")
                        .HasColumnType("int");

                    b.Property<decimal>("Precio_Tr")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id_Trabajo_Tr");

                    b.HasIndex("Id_Tipo_Trabajo_Tr");

                    b.ToTable("Trabajos");
                });

            modelBuilder.Entity("DB.TrabajoXTurno", b =>
                {
                    b.Property<int>("Id_Turno_Tt")
                        .HasColumnType("int");

                    b.Property<int>("Id_Trabajo_Tt")
                        .HasColumnType("int");

                    b.HasKey("Id_Turno_Tt", "Id_Trabajo_Tt");

                    b.HasIndex("Id_Trabajo_Tt");

                    b.ToTable("TrabajosXTurnos");
                });

            modelBuilder.Entity("DB.Turno", b =>
                {
                    b.Property<int>("Id_Turno_Tu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Turno_Tu"));

                    b.Property<TimeSpan?>("Duracion_Tu")
                        .HasColumnType("time");

                    b.Property<DateOnly>("Fecha_Tu")
                        .HasColumnType("date");

                    b.Property<TimeOnly>("Hora_Tu")
                        .HasColumnType("time");

                    b.Property<int>("Id_Estado_Turno_Tu")
                        .HasColumnType("int");

                    b.Property<int>("Id_Usuario_Tu")
                        .HasColumnType("int");

                    b.Property<decimal>("Precio_Total_Tu")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Seña_Tu")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id_Turno_Tu");

                    b.HasIndex("Id_Estado_Turno_Tu");

                    b.HasIndex("Id_Usuario_Tu");

                    b.ToTable("Turnos");
                });

            modelBuilder.Entity("DB.Usuario", b =>
                {
                    b.Property<int>("Id_Usuario_Us")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Usuario_Us"));

                    b.Property<string>("Apellido_Us")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Contraseña_Us")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Correo_Electronico_Us")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Id_Tipo_Usuario_Us")
                        .HasColumnType("int");

                    b.Property<string>("Nombre_Us")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Nombre_Usuario_Us")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Telefono_Us")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id_Usuario_Us");

                    b.HasAlternateKey("Correo_Electronico_Us")
                        .HasName("UK_Correo_Electronico_Us");

                    b.HasAlternateKey("Nombre_Usuario_Us")
                        .HasName("UK_Nombre_Usuario_Us");

                    b.HasIndex("Id_Tipo_Usuario_Us");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("DB.Tarjeta_Trabajo", b =>
                {
                    b.HasOne("DB.Trabajo", "Trabajo")
                        .WithMany("Tarjetas_Trabajo")
                        .HasForeignKey("Id_Trabajo_Tar")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trabajo");
                });

            modelBuilder.Entity("DB.Trabajo", b =>
                {
                    b.HasOne("DB.Tipo_Trabajo", "Tipo_Trabajo")
                        .WithMany("Trabajos")
                        .HasForeignKey("Id_Tipo_Trabajo_Tr")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tipo_Trabajo");
                });

            modelBuilder.Entity("DB.TrabajoXTurno", b =>
                {
                    b.HasOne("DB.Trabajo", "Trabajo")
                        .WithMany("TrabajosXTurnos")
                        .HasForeignKey("Id_Trabajo_Tt")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DB.Turno", "Turno")
                        .WithMany("TrabajosXTurnos")
                        .HasForeignKey("Id_Turno_Tt")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trabajo");

                    b.Navigation("Turno");
                });

            modelBuilder.Entity("DB.Turno", b =>
                {
                    b.HasOne("DB.Estado_Turno", "Estado_Turno")
                        .WithMany("Turnos")
                        .HasForeignKey("Id_Estado_Turno_Tu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DB.Usuario", "Usuario")
                        .WithMany("Turnos")
                        .HasForeignKey("Id_Usuario_Tu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estado_Turno");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("DB.Usuario", b =>
                {
                    b.HasOne("DB.Tipo_Usuario", "Tipo_Usuario")
                        .WithMany("Usuarios")
                        .HasForeignKey("Id_Tipo_Usuario_Us")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tipo_Usuario");
                });

            modelBuilder.Entity("DB.Estado_Turno", b =>
                {
                    b.Navigation("Turnos");
                });

            modelBuilder.Entity("DB.Tipo_Trabajo", b =>
                {
                    b.Navigation("Trabajos");
                });

            modelBuilder.Entity("DB.Tipo_Usuario", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("DB.Trabajo", b =>
                {
                    b.Navigation("Tarjetas_Trabajo");

                    b.Navigation("TrabajosXTurnos");
                });

            modelBuilder.Entity("DB.Turno", b =>
                {
                    b.Navigation("TrabajosXTurnos");
                });

            modelBuilder.Entity("DB.Usuario", b =>
                {
                    b.Navigation("Turnos");
                });
#pragma warning restore 612, 618
        }
    }
}
